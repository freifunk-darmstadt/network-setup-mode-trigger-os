name: "Build ISO"
on:
  push:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        plattform: [x86_64-linux]
        include:
          - plattform: x86_64-linux
            type: iso
            attrPath: config.system.build.isoImage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: cachix/install-nix-action@v23
      with:
        nix_path: nixpkgs=channel:nixos-24.05
        extra_nix_config: |
          system-features = aarch64-linux arm-linux
    - run: |
         DEBIAN_FRONTEND=noninteractive
         sudo apt-get update -q -y && sudo apt-get install -q -y tree qemu-system-aarch64 qemu-efi binfmt-support qemu-user-static
    - run: nix-build '<nixpkgs/nixos>' -A ${{ matrix.attrPath }} -I nixos-config=${{ matrix.type }}.nix --argstr system ${{ matrix.plattform }}
    - run: tree result
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.plattform }}-${{ matrix.type }}
        path: result/${{ matrix.type }}/
        if-no-files-found: error
        retention-days: 5


  create_release:
    runs-on: ubuntu-latest
    needs:
      - build
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
      - name: Display structure of artifacts
        run: ls -R
      - name: Create Release & Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          # Note: If there is no release name specified, releases created in
          # the GitHub UI do not trigger a failure and are modified instead.
          draft: false
          prerelease: false
          # Note: Release notes are only auto-generated if the release was
          # created by the Github Action and was not created in the Github UI.
          generate_release_notes: true
          files: |
            ./*/*.iso
